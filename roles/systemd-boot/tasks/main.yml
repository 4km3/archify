---
- name: Obtain ID of root part
  tags: systemd-boot
  shell:
    "sgdisk -i 3 {{ systemd_boot_main_block_device }} | grep unique | awk -F': *' '{ print $2 }'"
  register: root_guid
  changed_when: false

- name: Set kernel options
  tags: systemd-boot
  set_fact:
    options: "options root=PARTUUID={{ root_guid.stdout|lower }} rootflags=subvol=@ rw add_efi_memmap elevator=noop quiet"

- name: Set kernel options using FDE
  tags: systemd-boot
  set_fact:
    options: "options root=/dev/mapper/arch cryptdevice=PARTUUID={{ root_guid.stdout|lower }} rootflags=subvol=@ rw add_efi_memmap elevator=noop quiet"
  when: want_fde is defined and want_fde

- name: Create /boot/loader/entries directory
  tags: systemd-boot
  file:
    path: /mnt/boot/loader/entries
    state: directory

- name: Create /boot/loader/loader.conf
  tags: systemd-boot
  copy:
    content: "# timeout 10\ndefault arch\n"
    dest: /mnt/boot/loader/loader.conf
    backup: no

- name: Create /boot/loader/entries/*.conf
  tags: systemd-boot
  template:
    src: entry.conf.j2
    dest: /mnt/boot/loader/entries/{{ item.filename }}
  vars:
    title: "{{ item.title }}"
    linux: "{{ item.linux }}"
    initrd: "{{ item.initrd }}"
    options: "{{ options }}"
  loop:
    - filename: arch.conf
      title: Arch Linux
      linux: /vmlinuz-linux
      initrd: /initramfs-linux.img

    - filename: arch-fallback.conf
      title: Arch Linux - fallback
      linux: /vmlinuz-linux
      initrd: /initramfs-linux-fallback.img

    - filename: arch-lts.conf
      title: Arch Linux LTS
      linux: /vmlinuz-linux-lts
      initrd: /initramfs-linux-lts.img

    - filename: arch-lts-fallback.conf
      title: Arch Linux LTS - fallback
      linux: /vmlinuz-linux-lts
      initrd: /initramfs-linux-lts-fallback.img

    - filename: arch-custom.conf
      title: Arch Linux custom
      linux: /vmlinuz-linux-custom
      initrd: /initramfs-linux-custom.img
